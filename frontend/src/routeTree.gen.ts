/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WszystkieProduktyImport } from './routes/wszystkie-produkty'
import { Route as RejestracjaImport } from './routes/rejestracja'
import { Route as LogowanieImport } from './routes/logowanie'
import { Route as ModeratorImport } from './routes/_moderator'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ProduktSlugImport } from './routes/produkt.$slug'
import { Route as ModeratorPanelModeracjiImport } from './routes/_moderator.panel-moderacji'
import { Route as AuthDodajProduktImport } from './routes/_auth.dodaj-produkt'
import { Route as AuthAdminImport } from './routes/_auth.admin'

// Create/Update Routes

const WszystkieProduktyRoute = WszystkieProduktyImport.update({
  id: '/wszystkie-produkty',
  path: '/wszystkie-produkty',
  getParentRoute: () => rootRoute,
} as any)

const RejestracjaRoute = RejestracjaImport.update({
  id: '/rejestracja',
  path: '/rejestracja',
  getParentRoute: () => rootRoute,
} as any)

const LogowanieRoute = LogowanieImport.update({
  id: '/logowanie',
  path: '/logowanie',
  getParentRoute: () => rootRoute,
} as any)

const ModeratorRoute = ModeratorImport.update({
  id: '/_moderator',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProduktSlugRoute = ProduktSlugImport.update({
  id: '/produkt/$slug',
  path: '/produkt/$slug',
  getParentRoute: () => rootRoute,
} as any)

const ModeratorPanelModeracjiRoute = ModeratorPanelModeracjiImport.update({
  id: '/panel-moderacji',
  path: '/panel-moderacji',
  getParentRoute: () => ModeratorRoute,
} as any)

const AuthDodajProduktRoute = AuthDodajProduktImport.update({
  id: '/dodaj-produkt',
  path: '/dodaj-produkt',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminRoute = AuthAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_moderator': {
      id: '/_moderator'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ModeratorImport
      parentRoute: typeof rootRoute
    }
    '/logowanie': {
      id: '/logowanie'
      path: '/logowanie'
      fullPath: '/logowanie'
      preLoaderRoute: typeof LogowanieImport
      parentRoute: typeof rootRoute
    }
    '/rejestracja': {
      id: '/rejestracja'
      path: '/rejestracja'
      fullPath: '/rejestracja'
      preLoaderRoute: typeof RejestracjaImport
      parentRoute: typeof rootRoute
    }
    '/wszystkie-produkty': {
      id: '/wszystkie-produkty'
      path: '/wszystkie-produkty'
      fullPath: '/wszystkie-produkty'
      preLoaderRoute: typeof WszystkieProduktyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dodaj-produkt': {
      id: '/_auth/dodaj-produkt'
      path: '/dodaj-produkt'
      fullPath: '/dodaj-produkt'
      preLoaderRoute: typeof AuthDodajProduktImport
      parentRoute: typeof AuthImport
    }
    '/_moderator/panel-moderacji': {
      id: '/_moderator/panel-moderacji'
      path: '/panel-moderacji'
      fullPath: '/panel-moderacji'
      preLoaderRoute: typeof ModeratorPanelModeracjiImport
      parentRoute: typeof ModeratorImport
    }
    '/produkt/$slug': {
      id: '/produkt/$slug'
      path: '/produkt/$slug'
      fullPath: '/produkt/$slug'
      preLoaderRoute: typeof ProduktSlugImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAdminRoute: typeof AuthAdminRoute
  AuthDodajProduktRoute: typeof AuthDodajProduktRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdminRoute: AuthAdminRoute,
  AuthDodajProduktRoute: AuthDodajProduktRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ModeratorRouteChildren {
  ModeratorPanelModeracjiRoute: typeof ModeratorPanelModeracjiRoute
}

const ModeratorRouteChildren: ModeratorRouteChildren = {
  ModeratorPanelModeracjiRoute: ModeratorPanelModeracjiRoute,
}

const ModeratorRouteWithChildren = ModeratorRoute._addFileChildren(
  ModeratorRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ModeratorRouteWithChildren
  '/logowanie': typeof LogowanieRoute
  '/rejestracja': typeof RejestracjaRoute
  '/wszystkie-produkty': typeof WszystkieProduktyRoute
  '/admin': typeof AuthAdminRoute
  '/dodaj-produkt': typeof AuthDodajProduktRoute
  '/panel-moderacji': typeof ModeratorPanelModeracjiRoute
  '/produkt/$slug': typeof ProduktSlugRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ModeratorRouteWithChildren
  '/logowanie': typeof LogowanieRoute
  '/rejestracja': typeof RejestracjaRoute
  '/wszystkie-produkty': typeof WszystkieProduktyRoute
  '/admin': typeof AuthAdminRoute
  '/dodaj-produkt': typeof AuthDodajProduktRoute
  '/panel-moderacji': typeof ModeratorPanelModeracjiRoute
  '/produkt/$slug': typeof ProduktSlugRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_moderator': typeof ModeratorRouteWithChildren
  '/logowanie': typeof LogowanieRoute
  '/rejestracja': typeof RejestracjaRoute
  '/wszystkie-produkty': typeof WszystkieProduktyRoute
  '/_auth/admin': typeof AuthAdminRoute
  '/_auth/dodaj-produkt': typeof AuthDodajProduktRoute
  '/_moderator/panel-moderacji': typeof ModeratorPanelModeracjiRoute
  '/produkt/$slug': typeof ProduktSlugRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/logowanie'
    | '/rejestracja'
    | '/wszystkie-produkty'
    | '/admin'
    | '/dodaj-produkt'
    | '/panel-moderacji'
    | '/produkt/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/logowanie'
    | '/rejestracja'
    | '/wszystkie-produkty'
    | '/admin'
    | '/dodaj-produkt'
    | '/panel-moderacji'
    | '/produkt/$slug'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_moderator'
    | '/logowanie'
    | '/rejestracja'
    | '/wszystkie-produkty'
    | '/_auth/admin'
    | '/_auth/dodaj-produkt'
    | '/_moderator/panel-moderacji'
    | '/produkt/$slug'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ModeratorRoute: typeof ModeratorRouteWithChildren
  LogowanieRoute: typeof LogowanieRoute
  RejestracjaRoute: typeof RejestracjaRoute
  WszystkieProduktyRoute: typeof WszystkieProduktyRoute
  ProduktSlugRoute: typeof ProduktSlugRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ModeratorRoute: ModeratorRouteWithChildren,
  LogowanieRoute: LogowanieRoute,
  RejestracjaRoute: RejestracjaRoute,
  WszystkieProduktyRoute: WszystkieProduktyRoute,
  ProduktSlugRoute: ProduktSlugRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_moderator",
        "/logowanie",
        "/rejestracja",
        "/wszystkie-produkty",
        "/produkt/$slug"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/admin",
        "/_auth/dodaj-produkt"
      ]
    },
    "/_moderator": {
      "filePath": "_moderator.tsx",
      "children": [
        "/_moderator/panel-moderacji"
      ]
    },
    "/logowanie": {
      "filePath": "logowanie.tsx"
    },
    "/rejestracja": {
      "filePath": "rejestracja.tsx"
    },
    "/wszystkie-produkty": {
      "filePath": "wszystkie-produkty.tsx"
    },
    "/_auth/admin": {
      "filePath": "_auth.admin.tsx",
      "parent": "/_auth"
    },
    "/_auth/dodaj-produkt": {
      "filePath": "_auth.dodaj-produkt.tsx",
      "parent": "/_auth"
    },
    "/_moderator/panel-moderacji": {
      "filePath": "_moderator.panel-moderacji.tsx",
      "parent": "/_moderator"
    },
    "/produkt/$slug": {
      "filePath": "produkt.$slug.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
